[logging]
# Parameter: log_file
#
# Set log file path write logging info
# Default: /tmp/ad2zbx.log
log_file = ad2zbx.log

# Parameter: log_level
#
# Set logging level
# Default: WARNING
log_level = INFO

[main]
# Parameter: disable_missing
#
# Disable users in Zabbix which are not found in Active Directory
# Default: False
disable_missing = False

# Parameter: create_with_empty_media
#
# Create users in Zabbix with empty media attributes
# Default: False
create_with_empty_media = True

[ldap]
# Parameter: ldap_server
#
# Defines LDAP server to connect
# Default: none, parameter is mandatory
ldap_server = 192.168.1.1

# Parameter: ldap_user
#
# User name to connect to LDAP server
# Default: none, parameter is mandatory
ldap_user = DOMAIN\user

# Parameter: ldap_pass
#
# Password for ldap_user account
# Default: none, parameter is mandatory
ldap_pass = P@ssw0rd

# ParameterL use_ssl
#
# Defines should we use SSL while connecting to LDAP server
# Default: False
use_ssl = False

# Parameter ldap_user_id_attr
#
# LDAP user attribute will be used as ID in Zabbix and will set as 'alias' user property.
# Default: sAMAccountName
ldap_user_id_attr = sAMAccountName

# Parameter ldap_user_attrs
#
# LDAP user attributes to fetch from catalog
# Default: ldap_user_id_attr + sn, givenName, mobile, mail
ldap_user_attrs = sn, givenName, mobile, mail

# Parameter ldap_user_filter
#
# LDAP filter to retrieve users from catalog
# Default: (ObjectClass=Person)(!(UserAccountControl:1.2.840.113556.1.4.803:=2))
ldap_user_filter = (ObjectClass=Person)(!(UserAccountControl:1.2.840.113556.1.4.803:=2))

# Parameter group_names_map
#
# Group name is a dict object where key is a group name and value - user type in Zabbix:
# 1 - Zabbix User
# 2 - Zabbix Admin
# 3 - Zabbix Super Admin
# Where is no default values, parameter is mandatory
group_names_map = {"Zabbix-Super-Admins": 3, "Zabbix-Admins": 2, "Zabbix-Users": 1}

# Parameter use_nested_groups
#
# Search users in nested LDAP groups.
# Default: False
use_nested_groups = True

# Parameter merge_privileges
#
# If one user presents in multiply groups leave it only with set privileges level - lower or higher.
# E.g. if user present in Zabbix Users and Zabbix Admins and merge_privileges set to 'lower',
# user will be create in Zabbix like Zabbix User.
# Default: lower
merge_privileges = lower

[zabbix]
# Parameter: zbx_api_url
#
# URL to access Zabbix API.
# Default: nome, parameter is mandatory
zbx_api_url = http://192.168.1.2

# Parameter: zbx_user
#
# User to access Zabbix API
# Default: none, parameter is mandatory
zbx_user = Admin

# Parameter: zbx_pass
#
# Password for user set in zbx_user parameter
# Default: none, parameter is mandatory
zbx_pass = zabbix

# Parameter: verify_ssl
#
# Should we verify SSL certificate while connection to Zabbix API.
# Default: False
verify_ssl = False

# Parameter: zbx_group_name{"alias": DEF_LDAP_USER_ID_ATTR, "name": "givenName", "surname": "sn"}
#
# Group name to store imported users.
# Default: none, parameter is mandatory
zbx_group_name = From AD

# Parameter: zbx_user_attr_map
#
# Defines map between Zabbix user properties and LDAP attributes.
# Default: {"alias": ldap_user_id_attr, "name": "givenName", "surname": "sn"}
zbx_user_attr_map = {"alias": "sAMAccountName", "name": "givenName", "surname": "sn"}

# Parameter: zbx_user_media_map
#
# Defines map between Zabbix media names and LDAP attributes. LDAP attribute set as a pare
# [attr, severity]. Severities are stored in binary form.
# https://www.zabbix.com/documentation/current/manual/api/reference/user/object
# Default: {"Email": ["mail", 60], "SMS": ["mobile", 48]}
zbx_user_media_map = {"Email": ["mail", "60"], "SMS": ["mobile", "48"]}

[preprocessing]
# Preprocessing section using to modify getting values from LDAP server before set it to Zabbix user.
# Supported next functions:
# - replace('what', 'to')
# - remove_spaces: True
# - add_suffix: "suffix_string"
# - add_prefix: "prefix_string"
# - to_lower: True
# - to_upper: True
# E.g:
# mobile = {"remove_spaces": True, "add_suffix": "@suffix.org"}